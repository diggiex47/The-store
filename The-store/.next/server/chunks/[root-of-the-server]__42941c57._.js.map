{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/milo/Project/The-store/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\nimport { withAccelerate } from \"@prisma/extension-accelerate\";\n\nconst globalForPrisma = global as unknown as {\n  prisma: PrismaClient;\n};\n\nconst prisma =\n  globalForPrisma.prisma || new PrismaClient().$extends(withAccelerate());\n\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\n\nexport default prisma;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,kBAAkB;AAIxB,MAAM,SACJ,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY,GAAG,QAAQ,CAAC,CAAA,GAAA,sKAAA,CAAA,iBAAc,AAAD;AAErE,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/milo/Project/The-store/src/lib/env.ts"],"sourcesContent":["import zod from \"zod\";\n\nconst envSchema = zod.object({\n  DATABASE_URL: zod.string().nonempty(),\n  Google_Client_id: zod.string().nonempty(),\n  Google_secret: zod.string().nonempty(),\n  NEAUTH_SECRET: zod.string().nonempty(),\n  NEXTAUTH_URL: zod.string().nonempty(),\n  NEAUTH_CLIENT_ID: zod.string().nonempty(),\n});\n\nexport const env = envSchema.parse(process.env);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,YAAY,8IAAA,CAAA,UAAG,CAAC,MAAM,CAAC;IAC3B,cAAc,8IAAA,CAAA,UAAG,CAAC,MAAM,GAAG,QAAQ;IACnC,kBAAkB,8IAAA,CAAA,UAAG,CAAC,MAAM,GAAG,QAAQ;IACvC,eAAe,8IAAA,CAAA,UAAG,CAAC,MAAM,GAAG,QAAQ;IACpC,eAAe,8IAAA,CAAA,UAAG,CAAC,MAAM,GAAG,QAAQ;IACpC,cAAc,8IAAA,CAAA,UAAG,CAAC,MAAM,GAAG,QAAQ;IACnC,kBAAkB,8IAAA,CAAA,UAAG,CAAC,MAAM,GAAG,QAAQ;AACzC;AAEO,MAAM,MAAM,UAAU,KAAK,CAAC,QAAQ,GAAG","debugId":null}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file:///home/milo/Project/The-store/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import prisma from \"@/lib/prisma\";\nimport { NextAuthOptions } from \"next-auth\";\nimport { PrismaAdapter } from \"@auth/prisma-adapter\";\nimport NextAuth from \"next-auth/next\";\nimport { Adapter } from \"next-auth/adapters\";\nimport GoogleProvider from \"next-auth/providers/google\"\nimport { env } from \"@/lib/env\";\n\nexport const authOptions: NextAuthOptions = {\n    adapter: PrismaAdapter(prisma) as Adapter,\n    providers: [\n        GoogleProvider({\n            clientId: env.Google_Client_id,\n            clientSecret: env.Google_secret,\n        })\n    ]\n}\n\nconst handler = NextAuth(authOptions);\n\n\nexport { handler as GET , handler as POST };"],"names":[],"mappings":";;;;;AAAA;AAEA;AACA;AAEA;AACA;;;;;;AAEO,MAAM,cAA+B;IACxC,SAAS,CAAA,GAAA,sJAAA,CAAA,gBAAa,AAAD,EAAE,sHAAA,CAAA,UAAM;IAC7B,WAAW;QACP,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACX,UAAU,mHAAA,CAAA,MAAG,CAAC,gBAAgB;YAC9B,cAAc,mHAAA,CAAA,MAAG,CAAC,aAAa;QACnC;KACH;AACL;AAEA,MAAM,UAAU,CAAA,GAAA,+IAAA,CAAA,UAAQ,AAAD,EAAE","debugId":null}}]
}
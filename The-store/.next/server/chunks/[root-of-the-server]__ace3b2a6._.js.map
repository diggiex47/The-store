{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///home/milo/Project/The-store/src/app/api/otp/send/route.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\nimport { randomInt } from \"crypto\";\nimport nodemailer from \"nodemailer\";\n\nconst prisma = new PrismaClient();\n\nexport async function POST(req: Request) {\n  const { email } = await req.json();\n\n  const code = randomInt(100000, 999999).toString();\n\n  const expiresAt = new Date(Date.now() + 5 * 60 * 1000);\n\n  await prisma.VerificationOTP.create({\n    data: { email, code, expiresAt },\n  });\n\n  const dalaal = nodemailer.createTransport({\n    service: \"gmail\",\n    auth: {\n      user: process.env.SMTP_USER,\n      pass: process.env.SMTP_PASS,\n    },\n  });\n\n  const info = await dalaal.sendMail({\n    to: email,\n    subject: \"Le tera OTP\",\n    text: `Secure code is ${code}`,\n  });\n  console.log(\"Email sent: \", info.messageId);\n  console.log(\"Sending OTP to:\", email);\n  console.log(\"OTP code is:\", code);\n\n  return new Response(JSON.stringify({ success: true }), {\n    status: 200,\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAExB,eAAe,KAAK,GAAY;IACrC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,IAAI;IAEhC,MAAM,OAAO,CAAA,GAAA,qGAAA,CAAA,YAAS,AAAD,EAAE,QAAQ,QAAQ,QAAQ;IAE/C,MAAM,YAAY,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK;IAEjD,MAAM,OAAO,eAAe,CAAC,MAAM,CAAC;QAClC,MAAM;YAAE;YAAO;YAAM;QAAU;IACjC;IAEA,MAAM,SAAS,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;QACxC,SAAS;QACT,MAAM;YACJ,MAAM,QAAQ,GAAG,CAAC,SAAS;YAC3B,MAAM,QAAQ,GAAG,CAAC,SAAS;QAC7B;IACF;IAEA,MAAM,OAAO,MAAM,OAAO,QAAQ,CAAC;QACjC,IAAI;QACJ,SAAS;QACT,MAAM,CAAC,eAAe,EAAE,MAAM;IAChC;IACA,QAAQ,GAAG,CAAC,gBAAgB,KAAK,SAAS;IAC1C,QAAQ,GAAG,CAAC,mBAAmB;IAC/B,QAAQ,GAAG,CAAC,gBAAgB;IAE5B,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;QAAE,SAAS;IAAK,IAAI;QACrD,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAmB;IAChD;AACF","debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///home/milo/Project/The-store/src/lib/env.ts"],"sourcesContent":["import zod from \"zod\";\n\nconst envSchema = zod.object({\n  DATABASE_URL: zod.string().nonempty(),\n  Google_Client_id: zod.string().nonempty(),\n  Google_secret: zod.string().nonempty(),\n  NEXTAUTH_SECRET: zod.string().nonempty(),\n  NEXTAUTH_URL: zod.string().nonempty(),\n  NEXTAUTH_CLIENT_ID: zod.string().nonempty(),\n});\n\nexport const env = envSchema.parse(process.env);\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,YAAY,4IAAA,CAAA,UAAG,CAAC,MAAM,CAAC;IAC3B,cAAc,4IAAA,CAAA,UAAG,CAAC,MAAM,GAAG,QAAQ;IACnC,kBAAkB,4IAAA,CAAA,UAAG,CAAC,MAAM,GAAG,QAAQ;IACvC,eAAe,4IAAA,CAAA,UAAG,CAAC,MAAM,GAAG,QAAQ;IACpC,iBAAiB,4IAAA,CAAA,UAAG,CAAC,MAAM,GAAG,QAAQ;IACtC,cAAc,4IAAA,CAAA,UAAG,CAAC,MAAM,GAAG,QAAQ;IACnC,oBAAoB,4IAAA,CAAA,UAAG,CAAC,MAAM,GAAG,QAAQ;AAC3C;AAEO,MAAM,MAAM,UAAU,KAAK,CAAC,QAAQ,GAAG","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///home/milo/Project/The-store/src/app/api/auth/%5B...nextauth%5D/option.ts"],"sourcesContent":["import bcrypt, { compare } from \"bcrypt\";\nimport CredentialsProvider from \"next-auth/providers/credentials\";\nimport GoogleProvider from \"next-auth/providers/google\";\nimport { env } from \"@/lib/env\";\nimport prisma from \"@/lib/prisma\";\nimport { NextAuthOptions, Session } from \"next-auth\";\n\n\nimport { cookies } from \"next/headers\";\n\nexport const authOptions: NextAuthOptions = {\n  secret: process.env.NEXTAUTH_SECRET,\n  providers: [\n    GoogleProvider({\n      clientId: env.Google_Client_id,\n      clientSecret: env.Google_secret,\n    }),\n    CredentialsProvider({\n      id: \"credentials\",\n      name: \"Credentials\",\n      credentials: {\n        username: { label: \"Username\", type: \"text\" },\n        password: { label: \"Password\", type: \"password\" },\n        rememberMe: { lable: \"Remember Me\", type: \"checkbox\" },\n      },\n      async authorize(credentials) {\n        try {\n          if (!credentials) {\n            return null;\n          }\n\n          //finding the user\n          const user = await prisma.user.findFirst({\n            where: {\n              OR: [\n                { name: credentials.username },\n                { email: credentials.username },\n              ],\n            },\n          });\n\n          //If user is not found\n          if (!user) {\n            console.log(\"No user found with the provided credentials\");\n            return null;\n          }\n\n          if(!user.emailVerified){\n            \n            const isEmail = credentials.username.includes('@');\n            if(!isEmail){\n              throw new Error(\"Please use your email until you are verified\");\n            }\n          throw new Error(\"Not Verified\");\n          }\n          if (\n            !credentials?.username ||\n            !credentials?.password ||\n            !user.password\n          ) {\n            return null;\n          }\n\n          const isValid = await compare(credentials.password, user.password);\n          if (!isValid) {\n            console.log(\"Invalid password\");\n            return null;\n          }\n          console.log(\"User authenticated successfully:\");\n\n          return {\n            id: user.id,\n            name: user.name,\n            email: user.email,\n            image:user.image,\n            rememberMe: credentials.rememberMe === \"true\",\n\n          }\n        } catch (error) {\n          console.error(\"Error during authorization:\", error);\n          return null;\n        }\n      },\n    }),\n  ],\n\n  session: {\n    strategy: \"jwt\",\n    maxAge: 24 * 60 * 60, // 1 day default\n    updateAge: 24 * 60 * 60,\n  },\n\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.id = user.id;\n        token.name = user.name;\n        token.email = user.email;\n      }\n      const remember = (await cookies()).get(\"rememberMe\")?.value === \"true\";\n      if (remember) {\n        token.exp = Math.floor(Date.now() / 1000) + 60 * 60 * 24 * 8;\n      } else {\n        token.exp = Math.floor(Date.now() / 1000) + 60 * 60 + 24;\n      }\n\n      return token;\n    },\n    async session({ session, token }) {\n      if (token) {\n        session.user.id = token.id;\n        session.user.name = token.name;\n        session.user.email = token.email;\n      }\n      return session;\n    },\n  },\n};\n\nexport default authOptions;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///home/milo/Project/The-store/src/app/publicPage/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/publicPage/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/publicPage/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///home/milo/Project/The-store/src/app/publicPage/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/publicPage/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/publicPage/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2Q,GACxS,yCACA","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file:///home/milo/Project/The-store/src/app/page.tsx"],"sourcesContent":["// src/app/page.tsx\nimport { getServerSession } from \"next-auth\";\nimport authOptions from \"./api/auth/[...nextauth]/option\";\nimport { redirect } from \"next/navigation\";\nimport Link from \"next/link\";\nimport PublicPage from \"./publicPage/page\";\n\nexport default async function Home() {\n  const session = await getServerSession(authOptions);\n\n  if (session) {\n    redirect(\"/dashboard\");\n  }\n  return (\n   <div>\n    <PublicPage></PublicPage>\n   </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,mBAAmB;;;;;AACnB;AACA;AACA;AAAA;AAEA;;;;;;AAEe,eAAe;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EAAE,yJAAA,CAAA,UAAW;IAElD,IAAI,SAAS;QACX,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IACA,qBACC,8OAAC;kBACA,cAAA,8OAAC,iIAAA,CAAA,UAAU;;;;;;;;;;AAGf","debugId":null}}]
}
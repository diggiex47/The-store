{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/milo/Project/The-store/src/app/schemas/registerSchema.ts"],"sourcesContent":["import { z } from \"zod\";\n\nexport const registerSchema = z\n  .object({\n    email: z\n    .string()\n    .email(\"Enter an valid email address\"),\n    \n    username: z\n      .string()\n      .max(20, \"Username must be at most 20 characters long\")\n      .min(3, \"Username must be at least 3 characters long\")\n      .regex(\n        /^[a-zA-Z0-9_]+$/,\n        \"Username can only contain letters, numbers, and underscores\",\n      ),\n\n    password: z\n      .string()\n      .min(8, \"Password must be at least 8 characters long\")\n      .max(50, \"Password must be at most 50 characters long\")\n      // .regex(\n      //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n      //   \"Password must contain at least one uppercase letter, one lowercase letter, and one number\",\n      // )\n      .regex(\n        /^[a-zA-Z0-9!@#$%^&*()_+=-]+$/,\n        \"Password can only contain letters, numbers, and special characters !@#$\",\n      ),\n    confirmPassword: z.string(),\n  })\n  .refine((data) => data.password === data.confirmPassword, {\n    message: \"Password Do Not Matched\",\n    path: [\"confirmPassword\"],\n  });\nexport type RegisterSchemaType = z.infer<typeof registerSchema>;\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,iBAAiB,kKAAA,CAAA,IAAC,CAC5B,MAAM,CAAC;IACN,OAAO,kKAAA,CAAA,IAAC,CACP,MAAM,GACN,KAAK,CAAC;IAEP,UAAU,kKAAA,CAAA,IAAC,CACR,MAAM,GACN,GAAG,CAAC,IAAI,+CACR,GAAG,CAAC,GAAG,+CACP,KAAK,CACJ,mBACA;IAGJ,UAAU,kKAAA,CAAA,IAAC,CACR,MAAM,GACN,GAAG,CAAC,GAAG,+CACP,GAAG,CAAC,IAAI,8CACT,UAAU;IACV,uCAAuC;IACvC,iGAAiG;IACjG,IAAI;KACH,KAAK,CACJ,gCACA;IAEJ,iBAAiB,kKAAA,CAAA,IAAC,CAAC,MAAM;AAC3B,GACC,MAAM,CAAC,CAAC,OAAS,KAAK,QAAQ,KAAK,KAAK,eAAe,EAAE;IACxD,SAAS;IACT,MAAM;QAAC;KAAkB;AAC3B","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///home/milo/Project/The-store/src/app/signUp/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Eye, EyeOff } from \"lucide-react\";\nimport Link from \"next/link\";\nimport { registerSchema, RegisterSchemaType } from \"../schemas/registerSchema\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { redirect, useRouter } from \"next/navigation\";\nimport PixelButton from \"@/components/pixelButton/page\";\n\n\nexport default  function SignUp() {\n  const [errorinServer, seterrorinServer] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [showCofirmPassword, setShowConfirmPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const router = useRouter();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<RegisterSchemaType>({\n    resolver: zodResolver(registerSchema),\n  });\n\n  const onSubmit = async (data: RegisterSchemaType) => {\n    setLoading(true);\n    seterrorinServer(\"\"); // optional: clear previous errors\n    try {\n      const res = await fetch(\"/api/register\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n\n      if (res.ok) {\n        router.push(`/signUp/verify?email=${data.email}`);\n      } else {\n        const errorData = await res.json();\n        seterrorinServer(errorData.error || \"Registration failed\");\n      }\n    } catch (err) {\n      seterrorinServer(\"Something went wrong\");\n    } finally {\n      setLoading(false);\n    }\n\n    \n  };\n\n  return (\n    <div className=\"bg-beige flex min-h-screen flex-col items-center justify-center px-4 pt-23\">\n      {/* Card Box */}\n      <div className=\"w-full max-w-md space-y-6 rounded-md bg-white p-8 shadow-md\">\n        {/* Heading */}\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"w-full max-w-sm space-y-4\"\n        >\n          <h1 className=\"item-centre pr-6 text-center text-4xl font-bold text-gray-900\">\n            Sign Up\n          </h1>\n\n          {errorinServer && (\n            <p className=\"text-sm text-red-500\">{errorinServer}</p>\n          )}\n\n          {/* Email */}\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">\n              Email*\n            </label>\n            <input\n              {...register(\"email\")}\n              type=\"email\"\n              placeholder=\"Email\"\n              className=\"mt-1 w-full overflow-x-auto rounded-md border px-3 py-2 pr-14 whitespace-nowrap shadow-sm focus:ring-1 focus:ring-indigo-700 focus:outline-none\"\n            />\n            {errors.email && (\n              <p className=\"text-sm text-red-500\">{errors.email.message}</p>\n            )}\n          </div>\n\n          {/* Username Field */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700\">\n              Username*\n            </label>\n            <input\n              {...register(\"username\")}\n              type=\"text\"\n              placeholder=\"Username\"\n              className=\"mt-1 w-full rounded-md border px-3 py-2 shadow-sm focus:ring-1 focus:ring-indigo-700 focus:outline-none\"\n              autoComplete=\"username\"\n            />\n            {errors.username && (\n              <p className=\"text-sm text-red-500\">{errors.username.message}</p>\n            )}\n          </div>\n\n          {/* Password Field */}\n          <div className=\"relative w-full\">\n            <label className=\"block text-sm font-medium text-gray-700\">\n              Password*\n            </label>\n            <input\n              {...register(\"password\")}\n              type={showPassword ? \"text\" : \"password\"}\n              placeholder=\"Password\"\n              autoComplete=\"new-password\"\n              className=\"mt-1 w-full overflow-x-auto rounded-md border px-3 py-2 pr-14 whitespace-nowrap shadow-sm focus:ring-1 focus:ring-indigo-700 focus:outline-none\"\n            />\n            <button\n              type=\"button\"\n              className=\"absolute top-11 right-3 -translate-y-1/2 cursor-pointer text-gray-500 hover:text-black focus:outline-none\"\n              onClick={() => setShowPassword((prev) => !prev)}\n              aria-label=\"Toggle password visibility\"\n            >\n              {showPassword ? <EyeOff /> : <Eye />}\n            </button>\n            {errors.password && (\n              <p className=\"text-sm text-red-500\">{errors.password.message}</p>\n            )}\n          </div>\n\n          {/* Confirm Password Field */}\n          <div className=\"relative w-full\">\n            <label className=\"block text-sm font-medium text-gray-700\">\n              Confirm-Password*\n            </label>\n            <input\n              {...register(\"confirmPassword\")}\n              type={showCofirmPassword ? \"text\" : \"password\"}\n              placeholder=\"Confirm Password\"\n              className=\"mt-1 w-full overflow-x-auto rounded-md border px-3 py-2 pr-14 whitespace-nowrap shadow-sm focus:ring-1 focus:ring-indigo-700 focus:outline-none\"\n            />\n            <button\n              type=\"button\"\n              className=\"absolute top-11 right-3 -translate-y-1/2 cursor-pointer text-gray-500 hover:text-black focus:outline-none\"\n              onClick={() => setShowConfirmPassword((prev) => !prev)}\n            >\n              {showCofirmPassword ? <EyeOff /> : <Eye />}\n            </button>\n            {errors.confirmPassword && (\n              <p className=\"text-sm text-red-500\">\n                {errors.confirmPassword.message}\n              </p>\n            )}\n          </div>\n\n          <PixelButton\n            type=\"submit\"\n            className=\"hover:pointer w-full\"\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <span className=\"mr-2 animate-spin\">‚è≥</span> Registering...\n              </>\n            ) : (\n              \"Register\"\n            )}\n          </PixelButton>\n\n          <p className=\"text-center text-sm text-gray-500\">\n            Already have an account?{\" \"}\n            <Link href=\"/signIn\" className=\"text-blue-600 hover:underline\">\n              Sign In{\" \"}\n            </Link>\n          </p>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/milo/Project/The-store/src/app/Product/%5Bid%5D/action.ts"],"sourcesContent":["\"use server\";\n\nimport { getCart, createCart } from \"@/lib/cart\";\nimport prisma from \"@/lib/prisma\";\nimport { revalidatePath } from \"next/cache\";\n\nexport async function IncProductCount(productId: string) {\n  const cart = (await getCart()) ?? (await createCart());\n\n  const articleInCart = cart.items.find((item) => item.productId === productId);\n\n  if (articleInCart) {\n    await prisma.cartItem.update({\n      where: { id: articleInCart.id },\n      data: { quantity: {increment: 1} },\n    });\n } else {\n    await prisma.cartItem.create({\n        data: {\n            cartId: cart.id,\n            productId,\n            quantity: 1,\n        },\n });\n}\n\nrevalidatePath(\"/Product/[id]\");\n}"],"names":[],"mappings":";;;;;;IAMsB,kBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/milo/Project/The-store/src/app/Product/%5Bid%5D/AddToCartButton.tsx"],"sourcesContent":["\"use client\";\nimport { useTransition, useState } from \"react\";\nimport { IncProductCount } from \"./action\";\n\ninterface AddToCartButtonProps {\n  productId: string;\n  IncProductCount: (productId: string) => Promise<void>;\n}\n\nexport default function AddToCartButton({ productId }: AddToCartButtonProps) {\n  const [isPending, startTransition] = useTransition();\n  const [success, setSuccess] = useState(false);\n\n  return (\n    <div className=\"flex items-center gap-2\">\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => {\n          setSuccess(false);\n          startTransition(async () => {\n            await IncProductCount(productId);\n            setSuccess(true);\n          });\n        }}\n      >\n        Add to Cart\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-5 w-5\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\"\n          />{\" \"}\n        </svg>\n      </button>\n      {isPending && <span className=\"loading loading-spinner loading-md\"/>}\n      {!isPending  && success && (\n        <span className=\"text-green-500\">Added to cart</span>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;AASe,SAAS,gBAAgB,EAAE,SAAS,EAAwB;;IACzE,MAAM,CAAC,WAAW,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD;IACjD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBACC,WAAU;gBACV,SAAS;oBACP,WAAW;oBACX,gBAAgB;wBACd,MAAM,CAAA,GAAA,0KAAA,CAAA,kBAAe,AAAD,EAAE;wBACtB,WAAW;oBACb;gBACF;;oBACD;kCAEC,6LAAC;wBACC,OAAM;wBACN,WAAU;wBACV,MAAK;wBACL,SAAQ;wBACR,QAAO;;0CAEP,6LAAC;gCACC,eAAc;gCACd,gBAAe;gCACf,aAAY;gCACZ,GAAE;;;;;;4BACD;;;;;;;;;;;;;YAGN,2BAAa,6LAAC;gBAAK,WAAU;;;;;;YAC7B,CAAC,aAAc,yBACd,6LAAC;gBAAK,WAAU;0BAAiB;;;;;;;;;;;;AAIzC;GAtCwB;;QACe,6JAAA,CAAA,gBAAa;;;KAD5B","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///home/milo/Project/The-store/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;AAYrBG,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ;;;;;;;;;;;;;;;;;IAdLN,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,+MAI2C,EAC7CA,qBAAqB","ignoreList":[0],"debugId":null}}]
}